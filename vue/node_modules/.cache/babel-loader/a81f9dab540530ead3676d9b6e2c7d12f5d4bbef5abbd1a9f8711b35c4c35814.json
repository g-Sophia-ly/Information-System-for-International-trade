{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"NewDeclare\",\n  data() {\n    return {\n      execId: 5,\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      invs: [],\n      total: 0,\n      inv: null,\n      hscode: null,\n      fromVisible: false,\n      form: {\n        orderNo: \"\"\n      },\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        inv: [{\n          required: true,\n          message: '请输入合同号',\n          trigger: 'blur'\n        }],\n        hscode: [{\n          required: true,\n          message: '请输入HS_CODE',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.form.orderNo = this.$route.query.id || '';\n  },\n  methods: {\n    handleStepClick() {\n      // this.$router.push({ path: '/succ'}); // 跳转到订单信息页面\n    },\n    handleImport(res) {\n      if (res.code === '200') {\n        // 成功\n        this.$message.success('导入成功');\n        this.load(1); // 刷新表格数据\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    exp() {\n      window.open(this.$baseUrl + '/declare/export');\n    },\n    changeStatus(row) {\n      this.$request.put('/declare/update', row).then(res => {\n        if (res.code === '200') {\n          // 表示操作成功\n          this.$message.success('操作成功');\n          this.load(1);\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      var that = this;\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request.get('/order/checkProdSta/' + that.form.orderNo).then(res => {\n            if (res.fstatus === '已完成') {\n              this.$request({\n                url: this.form.id ? '/declare/update' : '/declare/add',\n                method: this.form.id ? 'PUT' : 'POST',\n                data: this.form\n              }).then(res => {\n                if (res.code === '200') {\n                  // 表示成功保存\n                  this.$message.success('保存成功');\n                  this.load(1);\n                  this.fromVisible = false;\n                  this.$router.push({\n                    path: '/succ',\n                    query: {\n                      id: that.form.orderNo\n                    }\n                  });\n                  this.$request.get('/order/updateStatus/' + that.form.orderNo);\n                  this.$request.get('/order/updateExec/' + that.form.orderNo + \"/\" + this.execId);\n                } else {\n                  this.$message.error(res.msg); // 弹出错误的信息\n                }\n              });\n            } else {\n              this.$message.error(\"工厂未完成生产，业务流程无法结束！\");\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/declare/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/declare/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/declare/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          inv: this.inv,\n          hscode: this.hscode\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n      this.$request.get('/packlist/selectAll').then(res => {\n        this.invs = res.data || [];\n      });\n    },\n    reset() {\n      this.inv = null;\n      this.hscode = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","execId","tableData","pageNum","pageSize","invs","total","inv","hscode","fromVisible","form","orderNo","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","load","$route","query","id","methods","handleStepClick","handleImport","res","code","$message","success","error","msg","exp","window","open","$baseUrl","changeStatus","row","$request","put","then","handleAdd","handleEdit","stringify","save","that","$refs","formRef","validate","valid","get","fstatus","url","method","$router","push","path","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/NewDeclare.vue"],"sourcesContent":["<template>\r\n  <div class=\"table\">\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <div @click=\"handleStepClick\">\r\n      <el-steps align-center :active=\"4\" finish-status=\"success\">\r\n        <el-step title=\"订单信息\" ></el-step>\r\n        <el-step title=\"配码信息\" ></el-step>\r\n        <el-step title=\"装箱资料\" ></el-step>\r\n        <el-step title=\"订船资料\" ></el-step>\r\n        <el-step title=\"报关资料\" ></el-step>\r\n        <el-step title=\"完成\" ></el-step>\r\n      </el-steps>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <table>\r\n      <colgroup>\r\n        <col style=\"width: 100px;\"> <!-- 设置固定宽度的列 -->\r\n      </colgroup>\r\n      <thead>\r\n      <tr>\r\n        <th>报关资料</th>\r\n        <th>报关资料详情</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr>\r\n        <td>\r\n          <el-row justify=\"center\">\r\n            <el-col :span=\"12\">\r\n              <div class=\"square\">\r\n                订单号：\r\n                <span>{{ this.$route.query.id }}</span>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n        </td>\r\n        <td>\r\n          <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n\r\n            <el-form-item label=\"合同号\" prop=\"inv\">\r\n              <el-select style=\"width: 100%\" v-model=\"form.inv\">\r\n                <el-option v-for=\"item in invs\" :key=\"item.id\" :value=\"item.inv\" :label=\"item.inv\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"HS_CODE\" prop=\"hscode\">\r\n              <el-select v-model=\"form.hscode\" placeholder=\"请选择商品编号\" style=\"width: 200px; margin-left: 5px\">\r\n                <el-option label=\"运动鞋（橡胶）\" value=\"6402190090\"></el-option>\r\n                <el-option label=\"过踝鞋靴（橡胶）\" value=\"6402910000\"></el-option>\r\n                <el-option label=\"鞋靴（皮革）\" value=\"6403911990\"></el-option>\r\n                <el-option label=\"其他鞋靴\" value=\"6403990090\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品名称\" prop=\"types\">\r\n              <el-input v-model=\"form.types\" placeholder=\"商品名称\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"数量\" prop=\"quantity\">\r\n              <el-input v-model=\"form.quantity\" placeholder=\"数量\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"单价\" prop=\"price\">\r\n              <el-input v-model=\"form.price\" placeholder=\"单价\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"总价\" prop=\"totalPrice\">\r\n              <el-input v-model=\"form.totalPrice\" placeholder=\"总价\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"原产国\" prop=\"fromCountry\">\r\n              <el-input v-model=\"form.fromCountry\" placeholder=\"原产国\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"最终目的地\" prop=\"toCountry\">\r\n              <el-input v-model=\"form.toCountry\" placeholder=\"最终目的地\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"境内货源地\" prop=\"goodplace\">\r\n              <el-input v-model=\"form.goodplace\" placeholder=\"境内货源地\"></el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n<!--      <el-button @click=\"fromVisible = false\">取 消</el-button>-->\r\n      <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"NewDeclare\",\r\n  data() {\r\n    return {\r\n      execId:5,\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      invs: [],\r\n      total: 0,\r\n      inv: null,\r\n      hscode:null,\r\n      fromVisible: false,\r\n      form: {orderNo:\"\"},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        inv: [\r\n          {required: true, message: '请输入合同号', trigger: 'blur'},\r\n        ],\r\n        hscode: [\r\n          {required: true, message: '请输入HS_CODE', trigger: 'blur'},\r\n        ],\r\n      },\r\n      ids: [],\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n    this.form.orderNo = this.$route.query.id || '';\r\n  },\r\n  methods: {\r\n    handleStepClick(){\r\n     // this.$router.push({ path: '/succ'}); // 跳转到订单信息页面\r\n    },\r\n    handleImport(res) {\r\n      if (res.code === '200') {  // 成功\r\n        this.$message.success('导入成功')\r\n        this.load(1)  // 刷新表格数据\r\n      } else {\r\n        this.$message.error(res.msg)\r\n      }\r\n    },\r\n    exp() {\r\n      window.open(this.$baseUrl + '/declare/export')\r\n    },\r\n    changeStatus(row) {\r\n      this.$request.put('/declare/update', row).then(res => {\r\n        if (res.code === '200') {   // 表示操作成功\r\n          this.$message.success('操作成功')\r\n          this.load(1)\r\n        } else {\r\n          this.$message.error(res.msg)  // 弹出错误的信息\r\n        }\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      var that = this;\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request.get('/order/checkProdSta/'+that.form.orderNo).then(res=>{\r\n              if (res.fstatus==='已完成'){\r\n                this.$request({\r\n                  url: this.form.id ? '/declare/update' : '/declare/add',\r\n                  method: this.form.id ? 'PUT' : 'POST',\r\n                  data: this.form\r\n                }).then(res => {\r\n                  if (res.code === '200') {  // 表示成功保存\r\n                    this.$message.success('保存成功')\r\n                    this.load(1)\r\n                    this.fromVisible = false\r\n                    this.$router.push({ path: '/succ',query: { id: that.form.orderNo  }});\r\n                    this.$request.get('/order/updateStatus/'+that.form.orderNo)\r\n                    this.$request.get('/order/updateExec/'+that.form.orderNo+\"/\"+this.execId)\r\n                  } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                  }\r\n                })\r\n              }else {\r\n                this.$message.error(\"工厂未完成生产，业务流程无法结束！\")\r\n              }\r\n          })\r\n\r\n\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/declare/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/declare/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/declare/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          inv: this.inv,\r\n          hscode:this.hscode,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n      this.$request.get('/packlist/selectAll').then(res => {\r\n        this.invs = res.data || []\r\n      })\r\n    },\r\n    reset() {\r\n      this.inv = null\r\n      this.hscode = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}