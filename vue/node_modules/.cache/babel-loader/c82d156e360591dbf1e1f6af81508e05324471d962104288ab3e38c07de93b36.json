{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"@/router\";\nimport { post } from \"axios\";\nexport default {\n  name: \"Order\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      customers: [],\n      factories: [],\n      goodss: [],\n      staffs: [],\n      goodNo: null,\n      status: null,\n      orderNo: null,\n      total: 0,\n      username: null,\n      fromVisible: false,\n      fromVisible2: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        customerId: [{\n          required: true,\n          message: '请输入客户名称',\n          trigger: 'blur'\n        }],\n        goodNo: [{\n          required: true,\n          message: '请输入商品编号',\n          trigger: 'blur'\n        }],\n        quantity: [{\n          required: true,\n          message: '请输入商品数量',\n          trigger: 'blur'\n        }],\n        price: [{\n          required: true,\n          message: '请输入订单价格',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleStepClick() {\n      this.$router.push({\n        path: '/sizenum'\n      }); // 跳转到订单信息页面\n    },\n\n    initNotice(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.fromVisible2 = true;\n    },\n    router() {\n      return router;\n    },\n    handleImport(res) {\n      if (res.code === '200') {\n        // 成功\n        this.$message.success('导入成功');\n        this.load(1); // 刷新表格数据\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    exp() {\n      window.open(this.$baseUrl + '/order/export');\n    },\n    changeStatus(row) {\n      this.$request.put('/order/update', row).then(res => {\n        if (res.code === '200') {\n          // 表示操作成功\n          this.$message.success('操作成功');\n          this.load(1);\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\\\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/order/update' : '/order/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    noticesave() {\n      let data = {\n        staff: this.form.staffName,\n        orderNo: this.form.orderNo,\n        content: this.form.content,\n        status: '未处理'\n      };\n      this.$request.post('/notice/add', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('保存成功');\n          this.fromVisible2 = false;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    suc(row) {\n      // alert(row.goodNo)\n      let data = {\n        fstatus: '已完成',\n        id: row.id,\n        goodNo: row.goodNo,\n        quantity: row.quantity,\n        price: row.price\n      };\n      console.log(data);\n      this.$request.put('/order/update', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('保存成功');\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    unsuc(row) {\n      // alert(row.goodNo)\n      let data = {\n        fstatus: '未完成',\n        id: row.id,\n        goodNo: row.goodNo,\n        quantity: row.quantity,\n        price: row.price\n      };\n      console.log(data);\n      this.$request.put('/order/update', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('保存成功');\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/order/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/order/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      let user = JSON.parse(localStorage.getItem(\"xm-user\") || '{}');\n      this.$request.get('/order/selectPage?role=' + user.role + \"&userId=\" + user.id, {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          goodNo: this.goodNo,\n          status: this.status,\n          orderNo: this.orderNo\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n      this.$request.get('/customer/selectAll').then(res => {\n        this.customers = res.data || [];\n      });\n      this.$request.get('/factory/selectAll').then(res => {\n        this.factories = res.data || [];\n      });\n      this.$request.get('/goods/selectAll').then(res => {\n        this.goodss = res.data || [];\n      });\n      this.$request.get('/staff/selectAll').then(res => {\n        this.staffs = res.data || [];\n      });\n    },\n    reset() {\n      this.status = null;\n      this.goodNo = null;\n      this.orderNo = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    }\n  }\n};","map":{"version":3,"names":["router","post","name","data","tableData","pageNum","pageSize","customers","factories","goodss","staffs","goodNo","status","orderNo","total","username","fromVisible","fromVisible2","form","user","JSON","parse","localStorage","getItem","rules","customerId","required","message","trigger","quantity","price","ids","created","load","methods","handleStepClick","$router","push","path","initNotice","row","stringify","handleImport","res","code","$message","success","error","msg","exp","window","open","$baseUrl","changeStatus","$request","put","then","handleAdd","handleEdit","save","$refs","formRef","validate","valid","url","id","method","noticesave","staff","staffName","content","suc","fstatus","console","log","unsuc","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","role","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList","avatar"],"sources":["src/views/manager/Order.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入商品编号查询\" style=\"width: 200px\" v-model=\"goodNo\"></el-input>\r\n      <el-input placeholder=\"请输入订单编号查询\" style=\"width: 200px; margin-left: 5px\" v-model=\"orderNo\"></el-input>\r\n      <el-select v-model=\"status\" placeholder=\"请选择状态\" style=\"width: 200px; margin-left: 5px\">\r\n        <el-option label=\"已出货\" value=\"已出货\"></el-option>\r\n        <el-option label=\"未出货\" value=\"未出货\"></el-option>\r\n      </el-select>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\" v-if=\"user.role !== 'FACTORY'\">\r\n<!--      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>-->\r\n      <el-button type=\"danger\" plain @click=\"delBatch\" v-if=\"user.role === 'ADMIN'\">批量删除</el-button>\r\n      <el-button type=\"warning\" plain @click=\"exp\">批量导出</el-button>\r\n      <el-upload :show-file-list=\"false\" style=\"display: inline-block; margin-left: 10px\" :action=\"$baseUrl + '/order/import'\" :headers=\"{ token: user.token }\" :on-success=\"handleImport\" >\r\n<!--        <el-button type=\"info\" plain>批量导入</el-button>-->\r\n      </el-upload>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"customerName\" label=\"客户\" v-if=\"user.role !== 'FACTORY'\" width=\"130px\" align=\"center\" ></el-table-column>\r\n        <el-table-column prop=\"orderNo\" label=\"订单编号\" width=\"120px\"></el-table-column>\r\n        <el-table-column prop=\"factoryName\" label=\"工厂\" v-if=\"user.role !== 'FACTORY'\"></el-table-column>\r\n        <el-table-column prop=\"goodNo\" label=\"商品编号\"></el-table-column>\r\n        <el-table-column prop=\"color\" label=\"颜色\"></el-table-column>\r\n        <el-table-column prop=\"size\" label=\"码段\"></el-table-column>\r\n        <el-table-column prop=\"price\" label=\"单价（美金）\" width=\"120px\"></el-table-column>\r\n        <el-table-column prop=\"quantity\" label=\"数量\"></el-table-column>\r\n        <el-table-column show-overflow-tooltip prop=\"notice\" label=\"特别要求\"></el-table-column>\r\n        <el-table-column label=\"商品图片\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px; border-radius: 50%\" v-if=\"scope.row.avatar\"\r\n                        :src=\"scope.row.avatar\" :preview-src-list=\"[scope.row.avatar]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"date\" label=\"工厂交货日期\" width=\"100px\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\" v-if=\"user.role !== 'FACTORY'\">\r\n          <template v-slot=\"scope\">\r\n            <el-tag type=\"danger\" v-if=\"scope.row.status === '未出货'\">未出货</el-tag>\r\n            <el-tag type=\"success\" v-if=\"scope.row.status === '已出货'\">已出货</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"fstatus\" label=\"生产状态\">\r\n          <template v-slot=\"scope\">\r\n            <el-tag type=\"success\" v-if=\"scope.row.fstatus === '已完成'\">已完成</el-tag>\r\n            <el-tag type=\"danger\" v-if=\"scope.row.fstatus === '未完成'\">未完成</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"staffName\" label=\"跟单员\"></el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"250\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\" v-if=\"user.role !== 'FACTORY'\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"warning\" plain @click=\"unsuc(scope.row)\" v-if=\"user.role !== 'FACTORY'\">返工</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\" v-if=\"user.role === 'ADMIN'\">删除</el-button>\r\n            <el-button size=\"mini\" type=\"success\" plain @click=\"suc(scope.row)\" v-if=\"user.role === 'FACTORY'\">生产完成</el-button>\r\n            <el-button plain type=\"primary\" size=\"mini\" @click=\"initNotice(scope.row)\" :disabled=\"scope.row.status !== '未出货'\" v-if=\"user.role === 'FACTORY'\">提交生产问题</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"订单\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n\r\n        <el-form-item label=\"客户\" prop=\"customerId\">\r\n          <el-select style=\"width: 100%\" v-model=\"form.customerId\">\r\n            <el-option v-for=\"item in customers\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"订单编号\" prop=\"orderNo\">\r\n          <el-input v-model=\"form.orderNo\" placeholder=\"订单编号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"工厂\" prop=\"factoryId\">\r\n          <el-select style=\"width: 100%\" v-model=\"form.factoryId\">\r\n            <el-option v-for=\"item in factories\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"商品编号\" prop=\"goodNo\">\r\n          <el-select style=\"width: 100%\" v-model=\"form.goodNo\">\r\n            <el-option v-for=\"item in goodss\"  :key=\"item.id\" :value=\"item.goodsNo\" :label=\"item.goodsNo\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"颜色\" prop=\"color\">\r\n          <el-input v-model=\"form.color\" placeholder=\"颜色\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"码段\" prop=\"size\">\r\n          <el-input v-model=\"form.size\" placeholder=\"码段\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"单价$\" prop=\"price\">\r\n          <el-input v-model=\"form.price\" placeholder=\"单价\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"数量\" prop=\"quantity\">\r\n          <el-input v-model=\"form.quantity\" placeholder=\"数量\"></el-input>\r\n        </el-form-item>\r\n          <el-form-item label=\"工厂交货日期\" prop=\"date\">\r\n            <el-date-picker format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\"\r\n                            v-model=\"form.date\" style=\"width: 100%\"></el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item prop=\"notice\" label=\"特别要求\">\r\n            <el-input type=\"textarea\" :rows=\"5\" v-model=\"form.notice\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n        <el-form-item label=\"商品图片\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传图片</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"负责人\" prop=\"staffId\">\r\n          <el-select style=\"width: 100%\" v-model=\"form.staffId\">\r\n            <el-option v-for=\"item in staffs\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"生产问题通知\" :visible.sync=\"fromVisible2\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"content\" label=\"生产问题内容\">\r\n          <el-input type=\"textarea\" :rows=\"5\" v-model=\"form.content\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible2 = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"noticesave\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport router from \"@/router\";\r\nimport {post} from \"axios\";\r\n\r\nexport default {\r\n  name: \"Order\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      customers: [],\r\n      factories: [],\r\n      goodss:[],\r\n      staffs:[],\r\n      goodNo:null,\r\n      status:null,\r\n      orderNo:null,\r\n      total: 0,\r\n      username: null,\r\n      fromVisible: false,\r\n      fromVisible2:false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        customerId: [\r\n          {required: true, message: '请输入客户名称', trigger: 'blur'},\r\n        ],\r\n        goodNo: [\r\n          {required: true, message: '请输入商品编号', trigger: 'blur'},\r\n        ],\r\n        quantity: [\r\n          {required: true, message: '请输入商品数量', trigger: 'blur'},\r\n        ],\r\n        price: [\r\n          {required: true, message: '请输入订单价格', trigger: 'blur'},\r\n        ],\r\n      },\r\n      ids: [],\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n    handleStepClick(){\r\n      this.$router.push({ path: '/sizenum'}); // 跳转到订单信息页面\r\n    },\r\n    initNotice(row) {\r\n      this.form = JSON.parse(JSON.stringify(row))\r\n      this.fromVisible2 = true\r\n    },\r\n    router() {\r\n      return router\r\n    },\r\n    handleImport(res) {\r\n      if (res.code === '200') {  // 成功\r\n        this.$message.success('导入成功')\r\n        this.load(1)  // 刷新表格数据\r\n      } else {\r\n        this.$message.error(res.msg)\r\n      }\r\n    },\r\n    exp() {\r\n      window.open(this.$baseUrl + '/order/export')\r\n    },\r\n    changeStatus(row) {\r\n      this.$request.put('/order/update', row).then(res => {\r\n        if (res.code === '200') {   // 表示操作成功\r\n          this.$message.success('操作成功')\r\n          this.load(1)\r\n        } else {\r\n          this.$message.error(res.msg)  // 弹出错误的信息\r\n        }\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\\\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/order/update' : '/order/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form,\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    noticesave() {\r\n      let data = {\r\n        staff: this.form.staffName,\r\n        orderNo: this.form.orderNo,\r\n        content: this.form.content,\r\n        status: '未处理'\r\n      }\r\n      this.$request.post('/notice/add', data).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success('保存成功')\r\n          this.fromVisible2 = false\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    suc(row) {\r\n     // alert(row.goodNo)\r\n      let data = {\r\n        fstatus: '已完成',\r\n        id: row.id,\r\n        goodNo:row.goodNo,\r\n        quantity: row.quantity,\r\n        price: row.price\r\n      }\r\n      console.log(data)\r\n      this.$request.put('/order/update', data).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success('保存成功')\r\n          this.load();\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    unsuc(row) {\r\n      // alert(row.goodNo)\r\n      let data = {\r\n        fstatus: '未完成',\r\n        id: row.id,\r\n        goodNo:row.goodNo,\r\n        quantity: row.quantity,\r\n        price: row.price\r\n      }\r\n      console.log(data)\r\n      this.$request.put('/order/update', data).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success('保存成功')\r\n          this.load();\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/order/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/order/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      let user = JSON.parse(localStorage.getItem(\"xm-user\") || '{}')\r\n      this.$request.get('/order/selectPage?role='+user.role+\"&userId=\"+user.id, {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          goodNo: this.goodNo,\r\n          status: this.status,\r\n          orderNo: this.orderNo,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n      this.$request.get('/customer/selectAll').then(res => {\r\n        this.customers = res.data || []\r\n      })\r\n      this.$request.get('/factory/selectAll').then(res => {\r\n        this.factories = res.data || []\r\n      })\r\n      this.$request.get('/goods/selectAll').then(res => {\r\n        this.goodss = res.data || []\r\n      })\r\n      this.$request.get('/staff/selectAll').then(res => {\r\n        this.staffs = res.data || []\r\n      })\r\n    },\r\n\r\n\r\n    reset() {\r\n      this.status = null\r\n      this.goodNo = null\r\n      this.orderNo = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // 把头像属性换成上传的图片的链接\r\n      this.form.avatar = response.data\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}